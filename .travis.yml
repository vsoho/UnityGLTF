sudo: required
language: csharp
env:
  global:
  - BUILD_NAME=UnityGLTF
  - PROJECT_PATH=UnityGLTF
  - UNITY_VERSION=2018.4.14f1
services:
- docker
before_install:
# Decrypt the Unity license to UNITY_LICENSE_CONTENT
- openssl aes-256-cbc -K $encrypted_98a45b338031_key -iv $encrypted_98a45b338031_iv
  -in ./scripts/Unity_v2018.x.ulf.enc -out ./Unity_v2018.x.ulf -d
- export UNITY_LICENSE_CONTENT=`cat Unity_v2018.x.ulf`
- rm Unity_v2018.x.ulf
# Pull down docker image for this job
- docker pull $IMAGE_NAME
install:
# Build GLTFSerialization for the Unity project
- nuget restore ./GLTFSerialization/GLTFSerialization.sln
- msbuild ./GLTFSerialization/GLTFSerialization.sln /t:GLTFSerialization
# Mark all the scripts as executable
- chmod -R +rwx ./scripts/*
jobs:
  include:
  - name: "EditMode Test"
    stage: test
    script: "./scripts/docker_test.sh"
    env: TEST_PLATFORM=editmode IMAGE_NAME=gableroux/unity3d:$UNITY_VERSION
  - name: "PlayMode Test"
    stage: test
    script: "./scripts/docker_test.sh"
    env: TEST_PLATFORM=playmode IMAGE_NAME=gableroux/unity3d:$UNITY_VERSION
  - name: "StandaloneLinux64 Build"
    stage: build
    env: BUILD_TARGET=StandaloneLinux64 IMAGE_NAME=gableroux/unity3d:$UNITY_VERSION
    script: "./scripts/docker_build.sh"
  - name: "StandaloneOSX Build"
    stage: build
    env: BUILD_TARGET=StandaloneOSX IMAGE_NAME=gableroux/unity3d:$UNITY_VERSION-mac
    script: "./scripts/docker_build.sh"
  - name: "StandaloneWindows64 Build"
    stage: build
    env: BUILD_TARGET=StandaloneWindows64 IMAGE_NAME=gableroux/unity3d:$UNITY_VERSION-windows
    script: "./scripts/docker_build.sh"